{"version":3,"sources":["packages/ui/components/ErrorBoundary/ErrorBoundary.js","packages/ui/components/SearchBar/SearchBar.js","packages/ui/components/LoadingIndicator/LoadingIndicator.js","packages/ui/components/Loader/SpinnerLoader.js","packages/ui/components/Loader/RingLoader.js","packages/ui/components/Icon/Icon.js","packages/ui/services/ToastService/ToastService.js","packages/ui/index.js","environments/index.js","packages/ui/components/SearchBar/search.svg","packages/ui/assets/loading.svg","app/redux/reducers/home.js","app/redux/reducers/index.js","app/redux/action-types.js","app/redux/index.js","serviceWorker.js","app/Preloader.js","index.js","packages/core/react.js"],"names":["ErrorBoundary","props","state","error","errorInfo","info","this","setState","Container","Graphic","Cog","xmlns","viewBox","d","Title","process","children","React","Component","styled","div","h1","CogAnimation","keyframes","svg","details","defaultValue","onFilterChange","placeholder","noLabel","label","restProps","Wrapper","Label","InputWrapper","Input","onChange","event","target","value","SearchIcon","input","attrs","type","StandardSearchIcon","fill","width","height","LoadingIndicator","LoadingIndicatorWrapper","src","Loading","small","Ring","loadingRing","img","ToastMessage","message","replace","ToastService","notify","options","toast","position","Position","BOTTOM_LEFT","Type","INFO","ERROR","warning","WARNING","success","SUCCESS","POSITION","TYPE","module","exports","STATE_INIT","isLoading","sessions","combineReducers","homeReducer","payload","client","axios","create","baseURL","environments","responseType","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","axiosMiddleware","NODE_EN","logger","createStore","rootReducer","applyMiddleware","Boolean","location","hostname","match","PreloaderContext","createContext","App","loadable","fallback","ReactDOM","render","store","initialValue","defaultUseState","monkeyPatchSetState","data","newState","update","$merge","useState","loading","isActiveLink","useEffect","a","fetchData","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.12e3322c.chunk.js","sourcesContent":["/* eslint-disable space-before-function-paren */\nimport React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { error: null, errorInfo: null }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      error,\n      errorInfo: info\n    })\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <Container>\n          <Graphic>\n            <Cog xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'>\n              <path d='M29.18 19.07c-1.678-2.908-.668-6.634 2.256-8.328L28.29 5.295c-.897.527-1.942.83-3.057.83-3.36 0-6.085-2.743-6.085-6.126h-6.29c.01 1.043-.25 2.102-.81 3.07-1.68 2.907-5.41 3.896-8.34 2.21L.566 10.727c.905.515 1.69 1.268 2.246 2.234 1.677 2.904.673 6.624-2.24 8.32l3.145 5.447c.895-.522 1.935-.82 3.044-.82 3.35 0 6.066 2.725 6.083 6.092h6.29c-.004-1.035.258-2.08.81-3.04 1.676-2.902 5.4-3.893 8.325-2.218l3.145-5.447c-.9-.515-1.678-1.266-2.232-2.226zM16 22.48c-3.578 0-6.48-2.902-6.48-6.48S12.423 9.52 16 9.52c3.578 0 6.48 2.902 6.48 6.48s-2.902 6.48-6.48 6.48z' />\n            </Cog>\n          </Graphic>\n          <Title>Error</Title>\n          {process.env.NODE_ENV === 'development' && (\n            <Details>\n              {this.state.error && this.state.error.toString()}\n              <br />\n              {this.state.errorInfo.componentStack}\n            </Details>\n          )}\n        </Container>\n      )\n    }\n    return this.props.children || null\n  }\n}\n\nconst Container = styled.div`\n  position: relative;\n  background: #d4dfe6;\n  min-height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #274c5e;\n  text-align: center;\n  position: relative;\n  flex-direction: column;\n  padding: 100px;\n`\n\nconst Graphic = styled.div`\n  position: relative;\n`\n\nconst Title = styled.h1`\n  display: block;\n  font-size: 2rem;\n  font-weight: lighter;\n  text-align: center;\n`\n\nconst CogAnimation = keyframes`\n    0%   {transform: rotate(0deg);}\n    100% {transform: rotate(360deg);}\n`\n\nconst Cog = styled.svg`\n  width: 10rem;\n  height: 10rem;\n  fill: #6aafe6;\n  transition: easeInOutQuint();\n  animation: ${CogAnimation} 5s;\n`\n\nconst Details = styled.details`\n  max-width: 50%;\n  font-size: 1.2rem;\n  font-weight: lighter;\n  text-align: initial;\n  overflow: auto;\n  white-space: pre-wrap;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport StandardSearchIcon from './search.svg'\n\nexport const SearchBar = ({\n  defaultValue,\n  onFilterChange,\n  placeholder,\n  noLabel = false,\n  label = 'Search for ...',\n  ...restProps\n}) => (\n  <Wrapper {...restProps}>\n    {!noLabel && <Label>{label}</Label>}\n    <InputWrapper>\n      <Input\n        onChange={event => onFilterChange(event.target.value)}\n        placeholder={placeholder}\n        defaultValue={defaultValue}\n      />\n      <SearchIcon />\n    </InputWrapper>\n  </Wrapper>\n)\n\nexport const SearchBarRow = styled(SearchBar)`\n  flex: 0 0 auto;\n  margin-bottom: 26px;\n`\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  font-size: 12px;\n  font-weight: 400;\n  color: #666;\n  padding: 4px 0;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n`\n\nconst Input = styled.input.attrs({\n  type: 'text'\n})`\n  color: #333;\n  width: 100%;\n  padding: 16px;\n  padding-right: 50px;\n  font-size: 14px;\n  font-weight: 300;\n\n  border: 1px solid #ddd;\n  border-radius: 0px;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst SearchIcon = styled(StandardSearchIcon).attrs({\n  fill: '#666',\n  width: 20,\n  height: 20\n})`\n  position: absolute;\n  right: 16px;\n  top: 16px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport Animated, { FadeAnimations } from 'animated-styled-components'\n\nimport Loading from '../../assets/loading.svg'\n\nexport const LoadingIndicator = () => {\n  return (\n    <LoadingIndicatorWrapper>\n      {/* <Animated\n        animation={{\n          in: FadeAnimations.FadeInBackwards,\n          duration_in: 1\n        }}\n        transition={{\n          type: 'hover',\n          from: { property: 'transform', value: 'scale(1) rotate(0)' },\n          to: { property: 'transform', value: 'scale(1.2) rotate(25deg)' }\n        }}\n      > */}\n      <img src={Loading} />\n      {/* </Animated> */}\n    </LoadingIndicatorWrapper>\n  )\n}\n\nconst LoadingIndicatorWrapper = styled.div`\n  display: flex;\n  flex: inherit;\n  align-items: center;\n  justify-content: center;\n  height: inherit;\n  width: inherit;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const SpinnerLoader = ({ message = 'Loading...' }) => {\n  return (\n    <LoaderContainer>\n      <LoadingBox>\n        <LoadingBox>\n          <CircularLoader />\n          <LoaderMessage>{message}</LoaderMessage>\n        </LoadingBox>\n      </LoadingBox>\n    </LoaderContainer>\n  )\n}\n\nconst LoaderContainer = styled.div`\n  height: 200px;\n  width: 300px;\n  margin: 0 auto;\n  color: black;\n  z-index: 10;\n`\n\nconst LoadingBox = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  -webkit-transition: width 0.5s, height 1s; /* For Safari 3.1 to 6.0 */\n  transition: width 0.5s, height 1s;\n`\n\nconst CircularLoader = styled.div`\n  border: 4px solid #ccc;\n  border-top: 4px solid #1f73ab;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 2s linear infinite;\n  margin: 0 auto;\n  transition: all 0.5s ease-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nconst LoaderMessage = styled.div`\n  padding: 1em 0;\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nexport const RingLoader = ({ small, ...props }) => {\n  return (\n    <Wrapper {...props} small={small}>\n      <Ring small={small} />\n    </Wrapper>\n  )\n}\n\nexport const ButtonLoader = styled(RingLoader)`\n  position: absolute;\n  right: 30px;\n  top: 10px;\n`\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  ${props =>\n    props.small &&\n    `\n    width: 30px;\n    height: 30px;\n  `};\n`\n\nconst loadingRing = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\n\nconst Ring = styled.div`\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid #fff;\n  ${props =>\n    props.small &&\n    `\n    width: 30px;\n    height: 30px;\n    margin: 5px;\n    border: 5px solid #fff;\n  `} border-radius: 50%;\n  animation: ${loadingRing} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #fff #fff #fff transparent;\n  animation-delay: -0.15s;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const Icon = ({\n  source,\n  height = '20px',\n  fill,\n  width = '20px',\n  className,\n  isImage = false,\n  ...props\n}) => {\n  if (/.(jpe?g|png|gif|bmp)$/i.test(source) || isImage) {\n    return (\n      <IconImage\n        className={className}\n        src={source}\n        height={height}\n        width={width}\n        {...props}\n      />\n    )\n  }\n  return (\n    <IconSource\n      className={className}\n      fill={fill}\n      height={height}\n      width={width}\n      dangerouslySetInnerHTML={{ __html: source }}\n      {...props}\n    />\n  )\n}\n\nconst IconImage = styled.img``\n\nconst IconSource = styled.div`\n  svg {\n    height: ${props => props.height};\n    width: ${props => props.width};\n  }\n  path {\n    ${props => props.fill && 'fill: ' + props.fill};\n  }\n`\n","/* eslint-disable space-before-function-paren */\nimport React from 'react'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport { toast } from 'react-toastify'\n\n/*\n * Adapter for react-toastify\n * https://github.com/fkhadra/react-toastify\n **/\n\nconst ToastMessage = ({ message }) => {\n  return <p>{message.replace('GraphQL error:', '')} </p>\n}\n\nexport const ToastService = {\n  notify(message, options) {\n    return toast(<ToastMessage message={message} />, {\n      position: ToastService.Position.BOTTOM_LEFT,\n      ...options\n    })\n  },\n  info(message, options) {\n    return ToastService.notify(message, {\n      type: ToastService.Type.INFO,\n      ...options\n    })\n  },\n  error(message, options) {\n    return ToastService.notify(message, {\n      type: ToastService.Type.ERROR,\n      ...options\n    })\n  },\n  warning(message, options) {\n    return ToastService.notify(message, {\n      type: ToastService.Type.WARNING,\n      ...options\n    })\n  },\n  success(message, options) {\n    return ToastService.notify(message, {\n      type: ToastService.Type.SUCCESS,\n      ...options\n    })\n  },\n  Position: toast.POSITION,\n  Type: toast.TYPE\n}\n","export { ErrorBoundary } from './components/ErrorBoundary/ErrorBoundary'\nexport { SearchBar } from './components/SearchBar/SearchBar'\nexport { LoadingIndicator } from './components/LoadingIndicator/LoadingIndicator'\nexport { SpinnerLoader } from './components/Loader/SpinnerLoader.js'\nexport { RingLoader, ButtonLoader } from './components/Loader/RingLoader.js'\nexport { Icon } from './components/Icon/Icon'\n\nexport { ToastService } from './services/ToastService/ToastService'\n","module.exports = {}\n","module.exports = __webpack_public_path__ + \"static/media/search.3b7a5ef9.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.e92d43e1.svg\";","import { LOADING, GET_ALL_SESSIONS } from '../action-types'\n\nconst STATE_INIT = {\n  isLoading: false,\n  sessions: []\n}\n\nexport default (state = STATE_INIT, { type, payload }) => {\n  switch (type) {\n    case LOADING:\n      return { ...state, ...payload }\n    case GET_ALL_SESSIONS:\n      return {}\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport homeReducer from './home'\n\nexport default combineReducers({ homeReducer })\n","export const LOADING = 'LOADING'\nexport const SUCCESS = 'SUCCESS'\nexport const FAIL = 'FAIL'\nexport const GET_ALL_SESSIONS = 'GET_ALL_SESSIONS'\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport axios from 'axios'\nimport axiosMiddleware from 'redux-axios-middleware'\nimport logger from 'redux-logger'\n\nimport environments from '../../environments'\n\nimport rootReducer from './reducers'\n\nconst client = axios.create({\n  baseURL: environments.baseURL,\n  responseType: 'json'\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nlet middlewares = [thunk, axiosMiddleware(client)]\n\nif (process.env.NODE_EN !== 'production') middlewares = [...middlewares, logger]\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  // eslint-disable-next-line no-undef\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React, { createContext, useEffect } from 'react'\nimport { LoadingIndicator } from '../packages/ui'\nimport { useState } from '../packages/core'\n// import environments from 'environments'\n\nexport const PreloaderContext = createContext()\n\nexport const Preloader = ({ children }) => {\n  const [state, setState] = useState({\n    loading: true,\n    isActiveLink: [1, 0, 0, 0, 0]\n  })\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // const sessions = await axios(`${environments.baseUrl}sessions`)\n      // const parts = await axios(`${environments.baseUrl}parts`)\n      setState({ loading: false })\n    }\n    fetchData()\n  }, [])\n\n  if (state.loading) {\n    return <LoadingIndicator />\n  }\n\n  const props = {\n    ...state\n  }\n\n  return (\n    <PreloaderContext.Provider value={props}>\n      {children}\n    </PreloaderContext.Provider>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport loadable from '@loadable/component'\n\nimport ReactDOM from 'react-dom'\n\nimport store from './app/redux'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'owl.carousel/dist/assets/owl.carousel.css'\nimport 'owl.carousel/dist/assets/owl.theme.default.css'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './reset.css'\nimport './index.css'\nimport 'antd/dist/antd.css'\nimport './packages/css/main.css'\n\nimport { LoadingIndicator } from './packages/ui'\nimport { Preloader } from './app/Preloader'\n\nconst App = loadable(() => import('./app'), {\n  fallback: LoadingIndicator\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <Preloader>\n      <App />\n    </Preloader>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { useState as defaultUseState } from 'react'\nimport update from 'immutability-helper'\n\nexport const useState = (initialValue = {}) => {\n  const [state, monkeyPatchSetState] = defaultUseState(initialValue)\n\n  const setState = data => {\n    let newState = null\n    if (typeof data === 'object') {\n      newState = update(state, {\n        $merge: data\n      })\n    } else {\n      newState = data\n    }\n\n    monkeyPatchSetState(newState)\n  }\n\n  return [state, setState]\n}\n"],"sourceRoot":""}